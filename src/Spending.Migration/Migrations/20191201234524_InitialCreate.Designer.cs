// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spending.Migration;

namespace Spending.Migration.Migrations
{
    [DbContext(typeof(MigrationContext))]
    [Migration("20191201234524_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Spending.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BankId = 1,
                            Name = "Smart Access"
                        },
                        new
                        {
                            Id = 2,
                            BankId = 1,
                            Name = "Goal Saver"
                        },
                        new
                        {
                            Id = 3,
                            BankId = 1,
                            Name = "NetBank Saver"
                        },
                        new
                        {
                            Id = 4,
                            BankId = 2,
                            Name = "Amex Credit Card"
                        },
                        new
                        {
                            Id = 5,
                            BankId = 3,
                            Name = "CityBank Credit Card"
                        },
                        new
                        {
                            Id = 6,
                            BankId = 4,
                            Name = "Westpac Credit Card"
                        },
                        new
                        {
                            Id = 7,
                            BankId = 5,
                            Name = "Qantas Credit Card"
                        });
                });

            modelBuilder.Entity("Spending.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bank");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Commonwealth Bank"
                        },
                        new
                        {
                            Id = 2,
                            Name = "American Express"
                        },
                        new
                        {
                            Id = 3,
                            Name = "CityBank"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Westpac"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Qantas"
                        });
                });

            modelBuilder.Entity("Spending.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rent"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Groceries"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Health Insurance"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mobile Phone"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Electricity"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gas"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Netflix"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Internet"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Shopping"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Holiday"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Gym"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Transfer Between Accounts"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Salary"
                        });
                });

            modelBuilder.Entity("Spending.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TransactionTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Spending.Models.TransactionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionCategory");
                });

            modelBuilder.Entity("Spending.Models.TransactionDescriptionUserCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionDescriptionUserCategory");
                });

            modelBuilder.Entity("Spending.Models.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransactionType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Debit"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Credit"
                        });
                });

            modelBuilder.Entity("Spending.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kevin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mika"
                        });
                });

            modelBuilder.Entity("Spending.Models.Account", b =>
                {
                    b.HasOne("Spending.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Spending.Models.Transaction", b =>
                {
                    b.HasOne("Spending.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spending.Models.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spending.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Spending.Models.TransactionCategory", b =>
                {
                    b.HasOne("Spending.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spending.Models.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Spending.Models.TransactionDescriptionUserCategory", b =>
                {
                    b.HasOne("Spending.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spending.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
